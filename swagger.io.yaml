openapi: 3.0.0
info:
  title: Smart Tourism App API (Syria)
  description: API documentation for the Smart Tourism App backend. Provides access to tourist sites, products, hotel bookings, and user-generated content.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api
    description: Development Server

# Define Security Schemes (for authentication)
components:
  securitySchemes:
    sanctumAuth:
      type: http
      scheme: bearer
      bearerFormat: token
      description: |
        Authenticate using a Sanctum API token.
        Obtain the token from the `/login` endpoint.
        Include the token in the `Authorization` header: `Bearer <your_token>`

  # Define reusable Schemas (Data Models) for requests and responses
  schemas:
    # --- Error Schemas ---
    # ... (ValidationError and NotFound should already be here)
    ErrorResponse: # Generic Error Schema (used for 403, 409, etc.)
      type: object
      properties:
        message:
          type: string
          description: A human-readable message explaining the error.
          example: An error occurred.

    # --- Resource Schemas (Missing from previous iterations) ---

    ShoppingCartItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
          description: ID of the user who owns the cart item.
        product_id:
          type: integer
          example: 1
          description: ID of the product in the cart.
        quantity:
          type: integer
          example: 2
        added_at:
          type: string
          format: date-time
          example: "2025-05-25T10:00:00Z"
        # Relationship included in resource (example)
        product: # Include product details
           $ref: '#/components/schemas/Product'


    ProductOrderItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        order_id:
          type: integer
          example: 1
          description: ID of the product order this item belongs to.
        product_id:
          type: integer
          example: 1
          description: ID of the product that was ordered.
        quantity:
          type: integer
          example: 1
        price_at_purchase:
          type: number
          format: float
          example: 5000.00
          description: Price of the product at the time the order was placed.
        # Relationship included in resource (example)
        product: # Include a snapshot of product details at time of order (important!)
           $ref: '#/components/schemas/Product'


    ProductOrder:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
          description: ID of the user who made the purchase.
        order_date:
          type: string
          format: date-time
          example: "2025-05-26T10:00:00Z"
        total_amount:
          type: number
          format: float
          example: 6200.00
        order_status:
          type: string
          enum: [ Pending, Processing, Shipped, Delivered, Cancelled, PaymentFailed ]
          example: Delivered
        shipping_address_line1:
          type: string
          nullable: true
          example: شارع النصر
        shipping_address_line2:
          type: string
          nullable: true
          example: بناء رقم 5، شقة 10
        shipping_city:
          type: string
          nullable: true
          example: دمشق
        shipping_postal_code:
          type: string
          nullable: true
          example: null
        shipping_country:
          type: string
          nullable: true
          example: Syria
        payment_transaction_id:
          type: string
          nullable: true
          example: "txn_abc123xyz"
        created_at:
          type: string
          format: date-time
          example: "2025-05-26T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-26T10:00:00Z"
        # Relationships included in resource (example)
        user:
            $ref: '#/components/schemas/User'
            nullable: true
        items: # Include order items
            type: array
            items:
               $ref: '#/components/schemas/ProductOrderItem'
    # --- Authentication & User Schemas ---
    LoginRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: User's username or email address.
          example: admin@app.com
        password:
          type: string
          format: password
          description: User's password.
          example: password
        device_name:
          type: string
          nullable: true
          description: Name of the device making the request (e.g., 'Mobile App').
          example: FlutterDevice

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
        - password_confirmation
        - first_name
        - last_name
      properties:
        username:
          type: string
          maxLength: 100
          description: Unique username for the user.
          example: newuser123
        email:
          type: string
          format: email
          maxLength: 100
          description: Unique email address for the user.
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          description: User's password (min 8 characters).
          example: securepassword123
        password_confirmation:
          type: string
          format: password
          minLength: 8
          description: Password confirmation (must match password).
          example: securepassword123
        user_type:
          type: string
          nullable: true
          enum: [ Tourist, Vendor, HotelBookingManager, ArticleWriter, Employee, Admin ]
          default: Tourist
          description: Type of user.
          example: Tourist
        first_name:
          type: string
          maxLength: 100
          description: User's first name (for profile).
          example: أحمد
        last_name:
          type: string
          maxLength: 100
          description: User's last name (for profile).
          example: علي
        father_name:
          type: string
          maxLength: 100
          nullable: true
          example: محمد
        mother_name:
          type: string
          maxLength: 100
          nullable: true
          example: فاطمة
        device_name:
          type: string
          nullable: true
          description: Name of the device making the request.
          example: FlutterPhone

    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the user.
          example: 1
        username:
          type: string
          example: admin
        email:
          type: string
          format: email
          example: admin@app.com
        user_type:
          type: string
          enum: [ Tourist, Vendor, HotelBookingManager, ArticleWriter, Employee, Admin ]
          example: Admin
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:18:03.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:18:03.000000Z"
        profile:
          $ref: '#/components/schemas/UserProfile'
          nullable: true
          description: User's profile details. Included when profile relationship is loaded.

    UserProfile:
      type: object
      properties:
        first_name:
          type: string
          example: محمد
        last_name:
          type: string
          example: العلي
        father_name:
          type: string
          nullable: true
          example: أحمد
        mother_name:
          type: string
          nullable: true
          example: رنا
        passport_image_url:
          type: string
          nullable: true
          example: null
        bio:
          type: string
          nullable: true
          example: مهتم بالسياحة والمغامرات
        profile_picture_url:
          type: string
          nullable: true
          example: /storage/profiles/default.jpg
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:20:00Z"

    UserPhoneNumber:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        phone_number:
          type: string
          example: "+963 991 123 456"
        is_primary:
          type: boolean
          example: true
        description:
          type: string
          nullable: true
          example: Mobile

    AuthSuccessResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: Sanctum API token.
          example: "2|aWAjhLkUgC8TfDKbwBTCFoYBjpELPoYplwwnljCX6ae2b5bc"

    LogoutSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Logged out successfully

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "The given data was invalid."
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            email:
              - "The email field is required."
            password:
              - "The password field must be at least 8 characters."
            username:
              - "The username has already been taken."

    NotFound:
      type: object
      properties:
        message:
          type: string
          example: "Resource not found."



    # --- Generic Pagination Schema ---
    PaginationLinkItem:
      type: object
      properties:
        url:
          type: string
          nullable: true
          example: "http://127.0.0.1:8000/api/products?page=1"
        label:
          type: string
          example: "« Previous"
        active:
          type: boolean
          example: false

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        from:
          type: integer
          nullable: true
          example: 1
        last_page:
          type: integer
          example: 5
        links:
          type: array
          items:
            $ref: '#/components/schemas/PaginationLinkItem'
        path:
          type: string
          example: "http://127.0.0.1:8000/api/products"
        per_page:
          type: integer
          example: 15
        to:
          type: integer
          nullable: true
          example: 15
        total:
          type: integer
          example: 70

    PaginatedResponse:
        type: object
        properties:
            data:
                type: array
                items: {} # Placeholder, actual type defined in path
            links:
                type: object # Simple pagination links (first, last, prev, next)
                properties:
                    first:
                        type: string
                        nullable: true
                        example: "http://127.0.0.1:8000/api/products?page=1"
                    last:
                        type: string
                        nullable: true
                        example: "http://127.0.0.1:8000/api/products?page=5"
                    prev:
                        type: string
                        nullable: true
                        example: null
                    next:
                        type: string
                        nullable: true
                        example: "http://127.0.0.1:8000/api/products?page=2"
            meta:
                $ref: '#/components/schemas/PaginationMeta' # Detailed meta info


    # --- Resource Schemas (Based on your Models and assumed Resources) ---

    ProductCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Textiles
        description:
          type: string
          nullable: true
          example: صناعات نسيجية متنوعة
        parent_category_id:
          type: integer
          nullable: true
          example: null
          description: ID of the parent category for hierarchical structure.

    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        seller_user_id:
          type: integer
          description: ID of the user selling this product.
          example: 3
        name:
          type: string
          example: وشاح حرير يدوي
        description:
          type: string
          example: وشاح مصنوع يدوياً من الحرير الطبيعي بتطريز دمشقي.
        color:
          type: string
          nullable: true
          example: أحمر
        stock_quantity:
          type: integer
          example: 15
        price:
          type: number
          format: float
          example: 5000.00
        main_image_url:
          type: string
          nullable: true
          example: /images/scarf.jpg
        category_id:
          type: integer
          nullable: true
          example: 2
        is_available:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:30:00Z"
        category:
            $ref: '#/components/schemas/ProductCategory'
            nullable: true
        seller:
            $ref: '#/components/schemas/User'
            nullable: true


    SiteCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Historical
        description:
          type: string
          nullable: true
          example: Sites of historical significance.

    TouristSite:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: قلعة حلب
        description:
          type: string
          example: قلعة أثرية تاريخية في قلب مدينة حلب القديمة.
        location_text:
          type: string
          nullable: true
          example: حلب، سوريا
        latitude:
          type: number
          format: float
          nullable: true
          example: 36.2007
        longitude:
          type: number
          format: float
          nullable: true
          example: 36.1629
        city:
          type: string
          nullable: true
          example: حلب
        country:
          type: string
          example: Syria
        category_id:
          type: integer
          nullable: true
          example: 1
        main_image_url:
          type: string
          nullable: true
          example: /images/aleppo_castle.jpg
        video_url:
          type: string
          nullable: true
          example: null
        added_by_user_id:
          type: integer
          nullable: true
          description: ID of the user who added/manages this site.
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:35:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:35:00Z"
        category:
            $ref: '#/components/schemas/SiteCategory'
            nullable: true
        added_by:
            $ref: '#/components/schemas/User'
            nullable: true


    TouristActivity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: جولة في قلعة حلب
        description:
          type: string
          nullable: true
          example: جولة سياحية برفقة مرشد في أرجاء قلعة حلب.
        site_id:
          type: integer
          nullable: true
          example: 1
        location_text:
          type: string
          nullable: true
          example: مدخل قلعة حلب
        start_datetime:
          type: string
          format: date-time
          example: "2025-06-01T10:00:00Z"
        duration_minutes:
          type: integer
          nullable: true
          example: 120
        organizer_user_id:
          type: integer
          nullable: true
          example: 3
        price:
          type: number
          format: float
          nullable: true
          example: 50.00
        max_participants:
          type: integer
          nullable: true
          example: 20
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:40:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:40:00Z"
        site:
            $ref: '#/components/schemas/TouristSite'
            nullable: true
        organizer:
            $ref: '#/components/schemas/User'
            nullable: true

    HotelRoomType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Single Room
        description:
          type: string
          nullable: true
          example: غرفة لشخص واحد بسرير مفرد.

    Hotel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: فندق الشيراتون دمشق
        star_rating:
          type: integer
          nullable: true
          example: 5
        description:
          type: string
          nullable: true
          example: فندق فاخر يقع في قلب دمشق.
        address_line1:
          type: string
          nullable: true
          example: طريق المطار
        city:
          type: string
          nullable: true
          example: دمشق
        country:
          type: string
          example: Syria
        latitude:
          type: number
          format: float
          nullable: true
          example: 33.5128
        longitude:
          type: number
          format: float
          nullable: true
          example: 36.2919
        contact_phone:
          type: string
          nullable: true
          example: "+963 11 2222222"
        contact_email:
          type: string
          nullable: true
          example: info@sheratondamascus.com
        main_image_url:
          type: string
          nullable: true
          example: /images/sheraton_damascus.jpg
        managed_by_user_id:
          type: integer
          nullable: true
          description: ID of the user managing this hotel (HotelBookingManager).
          example: 4
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:45:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:45:00Z"
        managed_by:
            $ref: '#/components/schemas/User'
            nullable: true
        rooms:
            type: array
            items:
                $ref: '#/components/schemas/HotelRoom'

    HotelRoom:
      type: object
      properties:
        id:
          type: integer
          example: 1
        hotel_id:
          type: integer
          example: 1
        room_type_id:
          type: integer
          example: 1
        room_number:
          type: string
          example: "101"
        price_per_night:
          type: number
          format: float
          example: 50000.00
        area_sqm:
          type: number
          format: float
          nullable: true
          example: 25.50
        max_occupancy:
          type: integer
          nullable: true
          example: 1
        description:
          type: string
          nullable: true
          example: غرفة مفردة بإطلالة على المدينة.
        is_available_for_booking:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:50:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:50:00Z"
        hotel:
            $ref: '#/components/schemas/Hotel'
            nullable: true
        type:
            $ref: '#/components/schemas/HotelRoomType'
            nullable: true


    HotelBooking:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          description: ID of the user who made the booking.
          example: 2
        room_id:
          type: integer
          description: ID of the booked room.
          example: 1
        check_in_date:
          type: string
          format: date
          example: "2025-07-10"
        check_out_date:
          type: string
          format: date
          example: "2025-07-15"
        num_adults:
          type: integer
          example: 1
        num_children:
          type: integer
          example: 0
        total_amount:
          type: number
          format: float
          example: 250000.00
        booking_status:
          type: string
          enum: [ PendingConfirmation, Confirmed, CancelledByUser, CancelledByHotel, Completed, NoShow ]
          example: Confirmed
        payment_status:
          type: string
          enum: [ Unpaid, Paid, PaymentFailed, Refunded ]
          example: Paid
        payment_transaction_id:
          type: string
          nullable: true
          example: "txn_abc123xyz"
        booked_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00Z"
        special_requests:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00Z"
        user:
            $ref: '#/components/schemas/User'
            nullable: true
        room:
            $ref: '#/components/schemas/HotelRoom'
            nullable: true


    SiteExperience:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          description: ID of the user who wrote the experience.
          example: 2
        site_id:
          type: integer
          description: ID of the tourist site reviewed.
          example: 1
        title:
          type: string
          nullable: true
          example: تجربتي الرائعة في قلعة حلب
        content:
          type: string
          example: زيارة ممتعة جداً، القلعة واسعة وتستحق الاستكشاف. المنظر من الأعلى مذهل.
        photo_url:
          type: string
          nullable: true
          example: /storage/experiences/exp_aleppo.jpg
        visit_date:
          type: string
          format: date
          nullable: true
          example: "2025-04-15"
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T19:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T19:00:00Z"
        user:
            $ref: '#/components/schemas/User'
            nullable: true
        site:
            $ref: '#/components/schemas/TouristSite'
            nullable: true


    Article:
      type: object
      properties:
        id:
          type: integer
          example: 1
        author_user_id:
          type: integer
          description: ID of the user who authored the article.
          example: 1
        title:
          type: string
          example: أجمل الأماكن الطبيعية في ريف اللاذقية
        content:
          type: string
          example: <p>تزخر ريف اللاذقية بالعديد من الوجهات الطبيعية الخلابة...</p>
        excerpt:
          type: string
          nullable: true
          example: اكتشف أجمل الشلالات والغابات في ريف اللاذقية.
        main_image_url:
          type: string
          nullable: true
          example: /images/latakia_nature.jpg
        video_url:
          type: string
          nullable: true
          example: null
        tags:
          type: string
          nullable: true
          example: سياحة,طبيعة,اللاذقية
        status:
          type: string
          enum: [ Draft, Published, Archived ]
          example: Published
        published_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-05-10T09:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2025-05-08T14:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-10T09:00:00Z"
        author:
            $ref: '#/components/schemas/User'
            nullable: true


    # Schemas for Polymorphic Targets (Favorite, Rating, Comment)

    Favorite:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2
            target_type:
              type: string
              enum: [ TouristSite, Product, Article, Hotel, SiteExperience ]
              example: TouristSite
            target_id:
              type: integer
              example: 1
            added_at:
              type: string
              format: date-time
              example: "2025-05-18T19:10:00Z"
            target:
              description: The actual favorited item object (depends on target_type).
              oneOf:
                - $ref: '#/components/schemas/TouristSite'
                - $ref: '#/components/schemas/Product'
                - $ref: '#/components/schemas/Article'
                - $ref: '#/components/schemas/Hotel'
                - $ref: '#/components/schemas/SiteExperience'


    Rating:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2
            target_type:
              type: string
              enum: [ TouristSite, Product, Hotel, Article, SiteExperience ]
              example: TouristSite
            target_id:
              type: integer
              example: 1
            rating_value:
              type: integer
              example: 5
            review_title:
              type: string
              nullable: true
              example: زيارة تستحق التقييم الكامل
            review_text:
              type: string
              nullable: true
              example: القلعة مذهلة والتجربة فاقت التوقعات.
            created_at:
              type: string
              format: date-time
              example: "2025-05-18T19:15:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-05-18T19:15:00Z"
            target:
              description: The actual rated item object (depends on target_type).
              oneOf:
                - $ref: '#/components/schemas/TouristSite'
                - $ref: '#/components/schemas/Product'
                - $ref: '#/components/schemas/Hotel'
                - $ref: '#/components/schemas/Article'
                - $ref: '#/components/schemas/SiteExperience'
            user:
                $ref: '#/components/schemas/User'


    Comment:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2
            target_type:
              type: string
              enum: [ Article, Product, TouristSite, Hotel, SiteExperience ]
              example: TouristSite
            target_id:
              type: integer
              example: 1
            parent_comment_id:
              type: integer
              nullable: true
              example: null
              description: ID of the parent comment if this is a reply.
            content:
              type: string
              example: تعليق رائع! شكراً لمشاركة تجربتك.
            created_at:
              type: string
              format: date-time
              example: "2025-05-18T19:20:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-05-18T19:20:00Z"
            user:
                $ref: '#/components/schemas/User'
            target:
                description: The item the comment is on.
                oneOf:
                    - $ref: '#/components/schemas/Article'
                    - $ref: '#/components/schemas/Product'
                    - $ref: '#/components/schemas/TouristSite'
                    - $ref: '#/components/schemas/Hotel'
                    - $ref: '#/components/schemas/SiteExperience'
            parent:
                $ref: '#/components/schemas/Comment'
                nullable: true
            replies:
                type: array
                items:
                    $ref: '#/components/schemas/Comment'


    # --- Request Schemas for Protected Actions ---

    UpdateProfileRequest:
      type: object
      properties:
        first_name: { type: string, maxLength: 100, example: سارة المعدلة }
        last_name: { type: string, maxLength: 100, example: محمود }
        father_name: { type: string, maxLength: 100, nullable: true, example: أحمد }
        mother_name: { type: string, maxLength: 100, nullable: true, example: فاطمة }
        bio: { type: string, nullable: true, example: أهتم بالسفر والتصوير. }
        profile_picture_url: { type: string, nullable: true, example: /storage/uploads/profiles/user2_new_pic.jpg }

    AddToCartRequest:
      type: object
      required: [ product_id, quantity ]
      properties:
        product_id: { type: integer, example: 1 }
        quantity: { type: integer, example: 2 }

    UpdateCartItemRequest:
      type: object
      required: [ quantity ]
      properties:
        quantity: { type: integer, example: 3 }

    PlaceOrderRequest:
      type: object
      required: [ shipping_address_line1, shipping_city ]
      properties:
        shipping_address_line1: { type: string, example: شارع النصر }
        shipping_address_line2: { type: string, nullable: true, example: بناء رقم 5، شقة 10 }
        shipping_city: { type: string, example: دمشق }
        shipping_postal_code: { type: string, nullable: true, example: null }
        shipping_country: { type: string, nullable: true, example: Syria }
        special_requests: { type: string, nullable: true, example: يرجى التوصيل صباحاً }

    StoreHotelBookingRequest:
      type: object
      required: [ room_id, check_in_date, check_out_date, num_adults ]
      properties:
        room_id: { type: integer, example: 1 }
        check_in_date: { type: string, format: date, example: "2025-08-01" }
        check_out_date: { type: string, format: date, example: "2025-08-05" }
        num_adults: { type: integer, example: 2 }
        num_children: { type: integer, example: 1 }
        special_requests: { type: string, nullable: true, example: سرير إضافي للطفل }

    StoreSiteExperienceRequest:
      type: object
      required: [ site_id, content ]
      properties:
        site_id: { type: integer, example: 1 }
        title: { type: string, nullable: true, example: زيارة لا تنسى }
        content: { type: string, example: المكان كان أجمل مما توقعت... }
        photo:
          type: string
          format: binary
          description: Upload a photo related to the experience.
        visit_date: { type: string, format: date, nullable: true, example: "2025-07-20" }

    UpdateSiteExperienceRequest:
      type: object
      properties:
        title: { type: string, nullable: true, example: تجربتي المحدثة في القلعة }
        content: { type: string, example: بعد زيارة ثانية، تأكدت أن المكان رائع! }
        visit_date: { type: string, format: date, nullable: true, example: "2025-08-10" }


    StoreArticleRequest: # For POST /articles (Admin/Author only)
      type: object
      required: [ title, content ]
      properties:
        title: { type: string, example: دليل لأفضل المطاعم التقليدية في دمشق }
        content: { type: string, example: <p>تعد دمشق عاصمة... </p> }
        excerpt: { type: string, nullable: true, example: استكشف أشهى المأكولات... }
        main_image:
           type: string
           format: binary
        video_url: { type: string, nullable: true, example: null }
        tags:
          type: string
          nullable: true
          description: Comma-separated tags for the article.
          example: دمشق,مطاعم,مأكولات # <- المثال هنا
        status: { type: string, enum: [ Draft, Published, Archived ], example: Published }
        published_at: { type: string, format: date-time, nullable: true, example: "2025-08-15T10:00:00Z" }

    UpdateArticleRequest:
      type: object
      properties:
        title: { type: string, example: دليل شامل لأفضل المطاعم التقليدية في دمشق }
        content: { type: string, example: <p>تعد دمشق عاصمة الياسمين...</p> }
        excerpt: { type: string, nullable: true, example: استكشف أشهى المأكولات في المطاعم التقليدية بدمشق. }
        video_url: { type: string, nullable: true, example: "https://youtube.com/example" }
        tags: 
           type: string
           nullable: true
           example: دمشق,مطاعم,مأكولات,طعام
        status: { type: string, enum: [ Draft, Published, Archived ], example: Draft }
        published_at: { type: string, format: date-time, nullable: true, example: null }


    ToggleFavoriteRequest:
      type: object
      required: [ target_type, target_id ]
      properties:
        target_type:
          type: string
          enum: [ TouristSite, Product, Article, Hotel, SiteExperience ]
          example: TouristSite
        target_id:
          type: integer
          example: 1

    StoreRatingRequest:
      type: object
      required: [ target_type, target_id, rating_value ]
      properties:
        target_type:
          type: string
          enum: [ TouristSite, Product, Hotel, Article, SiteExperience ]
          example: TouristSite
        target_id:
          type: integer
          example: 1
        rating_value:
          type: integer
          example: 4
          description: Rating value (e.g., 1-5).
        review_title:
          type: string
          nullable: true
          example: مكان جميل
        review_text:
          type: string
          nullable: true
          example: استمتعت كثيراً بزيارة هذا المكان.

    UpdateRatingRequest:
      type: object
      required: [ rating_value ]
      properties:
        rating_value: { type: integer, example: 5 }
        review_title: { type: string, nullable: true, example: تجربة فاقت التوقعات }
        review_text: { type: string, nullable: true, example: لقد كانت الزيارة رائعة جداً! }


    StoreCommentRequest:
      type: object
      required: [ target_type, target_id, content ]
      properties:
        target_type:
          type: string
          enum: [ Article, Product, TouristSite, Hotel, SiteExperience ]
          example: TouristSite
        target_id:
          type: integer
          example: 1
        parent_comment_id:
          type: integer
          nullable: true
          example: null
          description: ID of the parent comment if this is a reply.
        content:
          type: string
          example: تعليق رائع! شكراً لمشاركة تجربتك.

    UpdateCommentRequest:
      type: object
      required: [ content ]
      properties:
        content: { type: string, example: تعليقي المعدل على التجربة. }


# Define the API Paths (Endpoints)
paths:

  # --- Authentication Paths (Public) ---
  /register:
    post:
      summary: Register a new user
      tags: [ Authentication ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
              example:
                user:
                  id: 5
                  username: newuser123
                  email: user@example.com
                  user_type: Tourist
                  is_active: true
                  created_at: "2025-05-18T20:00:00Z"
                  updated_at: "2025-05-18T20:00:00Z"
                  profile:
                    first_name: أحمد
                    last_name: علي
                    father_name: محمد
                    mother_name: فاطمة
                    passport_image_url: null
                    bio: مستخدم جديد
                    profile_picture_url: null
                    updated_at: "2025-05-18T20:00:00Z"
                token: "3|abcdefghijklmnopqrstuvwxyz1234567890"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized # Or a more specific description like "Invalid credentials"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError' # أو schema خطأ عام آخر مثل ErrorResponse
              # مثال اختياري هنا
              # example:
              #   message: "Unauthenticated."

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              # مثال اختياري هنا
              # example:
              #   message: "This action is unauthorized."

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              # مثال اختياري هنا
              # example:
              #   message: "Resource not found."


        '409': # مثال لـ Conflict
           description: Conflict
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
               example:
                 message: "Cannot place order, your cart is empty."

        '204':
          description: No Content # 204 responses do not have a response body/content
          
  /login:
    post:
      summary: Authenticate user and issue token
      tags: [ Authentication ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
              example:
                user:
                  id: 1
                  username: admin
                  email: admin@app.com
                  user_type: Admin
                  is_active: true
                  created_at: "2025-05-18T18:18:03Z"
                  updated_at: "2025-05-18T18:18:03Z"
                  profile:
                     first_name: المدير
                     last_name: المسؤول
                     father_name: null
                     mother_name: null
                     passport_image_url: null
                     bio: مدير النظام الرئيسي
                     profile_picture_url: null
                     updated_at: "2025-05-18T18:20:00Z"
                token: "2|aWAjhLkUgC8TfDKbwBTCFoYBjpELPoYplwwnljCX6ae2b5bc"
        '401':
          description: Unauthorized (Invalid credentials)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  # --- Protected Paths (require sanctumAuth) ---
  /logout:
    post:
      summary: Logout authenticated user and invalidate token
      tags: [ Authentication ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutSuccessResponse'
              example:
                message: Logged out successfully
        '401':
          description: Unauthorized (No valid token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /user:
    get:
      summary: Get authenticated user details (including profile and phone numbers)
      tags: [ Authentication, User Profile ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: Authenticated user details
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      profile:
                        $ref: '#/components/schemas/UserProfile'
                      phone_numbers:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserPhoneNumber'

              example:
                id: 2
                username: tourist1
                email: tourist1@app.com
                user_type: Tourist
                is_active: true
                created_at: "2025-05-18T18:18:03Z"
                updated_at: "2025-05-18T18:18:03Z"
                profile:
                  first_name: سارة
                  last_name: محمود
                  father_name: null
                  mother_name: null
                  passport_image_url: null
                  bio: أحب استكشاف المواقع التاريخية.
                  profile_picture_url: /storage/profiles/sara.jpg
                  updated_at: "2025-05-18T18:25:00Z"
                phone_numbers:
                  - id: 1
                    user_id: 2
                    phone_number: "+963 991 123 456"
                    is_primary: true
                    description: Mobile
                  - id: 2
                    user_id: 2
                    phone_number: "+963 11 987 654"
                    is_primary: false
                    description: Home
        '401':
          description: Unauthorized (No valid token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /profile:
    get:
      summary: Get authenticated user's profile
      tags: [ User Profile ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: User and profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                 id: 2
                 username: tourist1
                 email: tourist1@app.com
                 user_type: Tourist
                 is_active: true
                 created_at: "2025-05-18T18:18:03Z"
                 updated_at: "2025-05-18T18:18:03Z"
                 profile:
                     first_name: سارة
                     last_name: محمود
                     father_name: null
                     mother_name: null
                     passport_image_url: null
                     bio: أحب استكشاف المواقع التاريخية.
                     profile_picture_url: /storage/profiles/sara.jpg
                     updated_at: "2025-05-18T18:25:00Z"

        '401':
          description: Unauthorized (No valid token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


    post:
      summary: Update authenticated user's profile
      tags: [ User Profile ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
          # multipart/form-data example for file upload
          # multipart/form-data:
          #  schema:
          #    type: object
          #    properties:
          #      first_name: { type: string, maxLength: 100, example: سارة المعدلة }
          #      last_name: { type: string, maxLength: 100, example: محمود }
          #      # ... other profile fields ...
          #      profile_picture: { type: string, format: binary } # File field

      responses:
        '200':
          description: Profile updated successfully
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                 id: 2
                 username: tourist1
                 email: tourist1@app.com
                 user_type: Tourist
                 is_active: true
                 created_at: "2025-05-18T18:18:03Z"
                 updated_at: "2025-05-18T19:30:00Z"
                 profile:
                     first_name: سارة المعدلة
                     last_name: محمود
                     father_name: أحمد
                     mother_name: فاطمة
                     passport_image_url: null
                     bio: أهتم بالسفر والتصوير.
                     profile_picture_url: /storage/profiles/sara.jpg
                     updated_at: "2025-05-18T19:30:00Z"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /cart:
    get:
      summary: Get authenticated user's shopping cart items
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: List of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCartItem'
              example:
                - id: 1
                  user_id: 2
                  product_id: 1
                  quantity: 2
                  added_at: "2025-05-25T10:00:00Z"
                  product:
                     id: 1
                     name: وشاح حرير يدوي
                     price: 5000.00
                     main_image_url: /images/scarf.jpg
                - id: 2
                  user_id: 2
                  product_id: 2
                  quantity: 1
                  added_at: "2025-05-25T10:05:00Z"
                  product:
                     id: 2
                     name: صحن فخاري مزجج
                     price: 1200.00
                     main_image_url: /images/pottery_plate.jpg
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /cart/add:
    post:
      summary: Add an item to the authenticated user's shopping cart
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartRequest'
      responses:
        '201':
          description: Item added to cart successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
              example:
                 id: 3
                 user_id: 2
                 product_id: 1
                 quantity: 1
                 added_at: "2025-05-25T10:10:00Z"
                 product:
                    id: 1
                    name: وشاح حرير يدوي
                    price: 5000.00
                    main_image_url: /images/scarf.jpg

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /cart/{cartItem}:
    put:
      summary: Update the quantity of an item in the authenticated user's shopping cart
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: cartItem
          in: path
          required: true
          schema: { type: integer }
          description: ID of the cart item to update.
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartItemRequest'
      responses:
        '200':
          description: Cart item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
              example:
                 id: 1
                 user_id: 2
                 product_id: 1
                 quantity: 3
                 added_at: "2025-05-25T10:00:00Z"
                 product:
                    id: 1
                    name: وشاح حرير يدوي
                    price: 5000.00
                    main_image_url: /images/scarf.jpg

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Cart item does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Cart item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Remove an item from the authenticated user's shopping cart
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: cartItem
          in: path
          required: true
          schema: { type: integer }
          description: ID of the cart item to remove.
          example: 1
      responses:
        '204':
          description: Cart item removed successfully (No Content)
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Cart item does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Cart item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /cart/clear:
    post:
      summary: Clear all items from the authenticated user's shopping cart
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: Cart cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                    message: { type: string, example: Cart cleared successfully }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Cart not found (unlikely if user is authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /my-orders:
    get:
      summary: Get authenticated user's product orders
      tags: [ Product Orders ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of product orders (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/ProductOrder'
              example:
                 data:
                   - id: 1
                     user_id: 2
                     order_date: "2025-05-26T10:00:00Z"
                     total_amount: 6200.00
                     order_status: Delivered
                     shipping_address_line1: شارع النصر
                     shipping_address_line2: بناء رقم 5، شقة 10
                     shipping_city: دمشق
                     shipping_postal_code: null
                     shipping_country: Syria
                     payment_transaction_id: "txn_abc123xyz"
                     created_at: "2025-05-26T10:00:00Z"
                     updated_at: "2025-05-26T10:00:00Z"
                     items:
                       type: array
                       items:
                          $ref: '#/components/schemas/ProductOrderItem'
                       example:
                         - id: 1
                           order_id: 1
                           product_id: 1
                           quantity: 1
                           price_at_purchase: 5000.00
                           product:
                             id: 1
                             name: وشاح حرير يدوي
                             main_image_url: /images/scarf.jpg
                         - id: 2
                           order_id: 1
                           product_id: 2
                           quantity: 1
                           price_at_purchase: 1200.00
                           product:
                             id: 2
                             name: صحن فخاري مزجج
                             main_image_url: /images/pottery_plate.jpg
                   - id: 2
                     user_id: 2
                     order_date: "2025-05-28T15:00:00Z"
                     total_amount: 10000.00
                     order_status: Pending
                     shipping_address_line1: شارع الثورة
                     shipping_address_line2: null
                     shipping_city: حلب
                     shipping_postal_code: null
                     shipping_country: Syria
                     payment_transaction_id: null
                     created_at: "2025-05-28T15:00:00Z"
                     updated_at: "2025-05-28T15:00:00Z"
                     items:
                       type: array
                       items:
                          $ref: '#/components/schemas/ProductOrderItem'
                       example:
                         - id: 3
                           order_id: 2
                           product_id: 1
                           quantity: 2
                           price_at_purchase: 5000.00
                           product:
                             id: 1
                             name: وشاح حرير يدوي
                             main_image_url: /images/scarf.jpg

                 links: {}
                 meta: {}

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /my-orders/{productOrder}:
    get:
      summary: Get details of a specific product order for the authenticated user
      tags: [ Product Orders ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: productOrder
          in: path
          required: true
          schema: { type: integer }
          description: ID of the product order to retrieve.
          example: 1
      responses:
        '200':
          description: Product order details
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ProductOrder'
              example:
                 id: 1
                 user_id: 2
                 order_date: "2025-05-26T10:00:00Z"
                 total_amount: 6200.00
                 order_status: Delivered
                 shipping_address_line1: شارع النصر
                 shipping_address_line2: بناء رقم 5، شقة 10
                 shipping_city: دمشق
                 shipping_postal_code: null
                 shipping_country: Syria
                 payment_transaction_id: "txn_abc123xyz"
                 created_at: "2025-05-26T10:00:00Z"
                 updated_at: "2025-05-26T10:00:00Z"
                 items:
                   type: array
                   items:
                      $ref: '#/components/schemas/ProductOrderItem'
                   example:
                     - id: 1
                       order_id: 1
                       product_id: 1
                       quantity: 1
                       price_at_purchase: 5000.00
                       product:
                         id: 1
                         name: وشاح حرير يدوي
                         main_image_url: /images/scarf.jpg
                     - id: 2
                       order_id: 1
                       product_id: 2
                       quantity: 1
                       price_at_purchase: 1200.00
                       product:
                         id: 2
                         name: صحن فخاري مزجج
                         main_image_url: /images/pottery_plate.jpg

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Order does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /orders:
    post:
      summary: Place a new product order for the authenticated user (typically from cart)
      tags: [ Product Orders ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceOrderRequest'
      responses:
        '201':
          description: Order placed successfully
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ProductOrder'
              example:
                 id: 3
                 user_id: 2
                 order_date: "2025-05-29T11:30:00Z"
                 total_amount: 7400.00
                 order_status: Pending
                 shipping_address_line1: شارع الثورة
                 shipping_address_line2: null
                 shipping_city: حلب
                 shipping_postal_code: null
                 shipping_country: Syria
                 payment_transaction_id: null
                 created_at: "2025-05-29T11:30:00Z"
                 updated_at: "2025-05-29T11:30:00Z"
                 items:
                   type: array
                   items:
                      $ref: '#/components/schemas/ProductOrderItem'
                   example:
                     - id: 4
                       order_id: 3
                       product_id: 1
                       quantity: 1
                       price_at_purchase: 5000.00
                       product:
                         id: 1
                         name: وشاح حرير يدوي
                         main_image_url: /images/scarf.jpg
                     - id: 5
                       order_id: 3
                       product_id: 2
                       quantity: 2
                       price_at_purchase: 1200.00
                       product:
                         id: 2
                         name: صحن فخاري مزجج
                         main_image_url: /images/pottery_plate.jpg
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '409':
          description: Conflict (e.g., empty cart, product out of stock)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /my-bookings:
    get:
      summary: Get authenticated user's hotel bookings
      tags: [ Hotel Bookings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of hotel bookings (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/HotelBooking'
              example:
                 data:
                   - id: 1
                     user_id: 2
                     room_id: 1
                     check_in_date: "2025-07-10"
                     check_out_date: "2025-07-15"
                     num_adults: 1
                     num_children: 0
                     total_amount: 250000.00
                     booking_status: Confirmed
                     payment_status: Paid
                     payment_transaction_id: "txn_abc123xyz"
                     booked_at: "2025-05-18T18:55:00Z"
                     special_requests: null
                     created_at: "2025-05-18T18:55:00Z"
                     updated_at: "2025-05-18T18:55:00Z"
                     room:
                       id: 1
                       hotel_id: 1
                       room_number: "101"
                       price_per_night: 50000.00
                       type:
                         id: 1
                         name: Single Room
                       hotel:
                         id: 1
                         name: فندق الشيراتون دمشق
                         city: دمشق
                   - id: 2
                     user_id: 2
                     room_id: 2
                     check_in_date: "2025-08-01"
                     check_out_date: "2025-08-05"
                     num_adults: 2
                     num_children: 1
                     total_amount: 320000.00
                     booking_status: PendingConfirmation
                     payment_status: Unpaid
                     payment_transaction_id: null
                     booked_at: "2025-05-29T10:00:00Z"
                     special_requests: سرير إضافي للطفل
                     created_at: "2025-05-29T10:00:00Z"
                     updated_at: "2025-05-29T10:00:00Z"
                     room:
                       id: 2
                       hotel_id: 1
                       room_number: "205"
                       price_per_night: 80000.00
                       type:
                         id: 2
                         name: Double Room
                       hotel:
                         id: 1
                         name: فندق الشيراتون دمشق
                         city: دمشق

                 links: {}
                 meta: {}

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /my-bookings/{hotelBooking}:
    get:
      summary: Get details of a specific hotel booking for the authenticated user
      tags: [ Hotel Bookings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: hotelBooking
          in: path
          required: true
          schema: { type: integer }
          description: ID of the hotel booking to retrieve.
          example: 1
      responses:
        '200':
          description: Hotel booking details
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/HotelBooking'
              example:
                 id: 1
                 user_id: 2
                 room_id: 1
                 check_in_date: "2025-07-10"
                 check_out_date: "2025-07-15"
                 num_adults: 1
                 num_children: 0
                 total_amount: 250000.00
                 booking_status: Confirmed
                 payment_status: Paid
                 payment_transaction_id: "txn_abc123xyz"
                 booked_at: "2025-05-18T18:55:00Z"
                 special_requests: null
                 created_at: "2025-05-18T18:55:00Z"
                 updated_at: "2025-05-18T18:55:00Z"
                 room:
                   id: 1
                   hotel_id: 1
                   room_number: "101"
                   price_per_night: 50000.00
                   type:
                     id: 1
                     name: Single Room
                   hotel:
                     id: 1
                     name: فندق الشيراتون دمشق
                     city: دمشق
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Booking does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /bookings:
    post:
      summary: Place a new hotel booking for the authenticated user
      tags: [ Hotel Bookings ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreHotelBookingRequest'
      responses:
        '201':
          description: Booking placed successfully (might be pending confirmation/payment)
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/HotelBooking'
              example:
                 id: 3
                 user_id: 2
                 room_id: 1
                 check_in_date: "2025-08-01"
                 check_out_date: "2025-08-05"
                 num_adults: 2
                 num_children: 1
                 total_amount: 200000.00
                 booking_status: PendingConfirmation
                 payment_status: Unpaid
                 payment_transaction_id: null
                 booked_at: "2025-05-29T10:00:00Z"
                 special_requests: سرير إضافي للطفل
                 created_at: "2025-05-29T10:00:00Z"
                 updated_at: "2025-05-29T10:00:00Z"
                 room:
                   id: 1
                   hotel_id: 1
                   room_number: "101"
                   price_per_night: 50000.00
                   type:
                     id: 1
                     name: Single Room
                   hotel:
                     id: 1
                     name: فندق الشيراتون دمشق
                     city: دمشق
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '409':
          description: Conflict (e.g., Room not available for selected dates)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /my-bookings/{hotelBooking}/cancel:
    post:
      summary: Cancel a specific hotel booking for the authenticated user
      tags: [ Hotel Bookings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: hotelBooking
          in: path
          required: true
          schema: { type: integer }
          description: ID of the hotel booking to cancel.
          example: 2
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelBooking'
              example:
                 id: 2
                 user_id: 2
                 room_id: 2
                 check_in_date: "2025-08-01"
                 check_out_date: "2025-08-05"
                 num_adults: 2
                 num_children: 1
                 total_amount: 320000.00
                 booking_status: CancelledByUser
                 payment_status: Unpaid
                 payment_transaction_id: null
                 booked_at: "2025-05-29T10:00:00Z"
                 special_requests: سرير إضافي للطفل
                 created_at: "2025-05-29T10:00:00Z"
                 updated_at: "2025-05-29T10:05:00Z"
                 room:
                   id: 2
                   hotel_id: 1
                   room_number: "205"
                   price_per_night: 80000.00
                   type:
                     id: 2
                     name: Double Room
                   hotel:
                     id: 1
                     name: فندق الشيراتون دمشق
                     city: دمشق

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Booking does not belong to user or cannot be cancelled in its current state)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /my-experiences:
    get:
      summary: Get authenticated user's site experiences
      tags: [ Site Experiences ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of user's site experiences (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/SiteExperience'
              example:
                 data:
                   - id: 1
                     user_id: 2
                     site_id: 1
                     title: تجربتي الرائعة في قلعة حلب
                     content: زيارة ممتعة جداً...
                     photo_url: /storage/experiences/exp_aleppo.jpg
                     visit_date: "2025-04-15"
                     created_at: "2025-05-18T19:00:00Z"
                     updated_at: "2025-05-18T19:00:00Z"
                     site:
                       id: 1
                       name: قلعة حلب
                   - id: 2
                     user_id: 2
                     site_id: 2
                     title: الذهاب إلى تدمر كان مذهلاً
                     content: الآثار عظيمة والقصص مذهلة.
                     photo_url: null
                     visit_date: "2025-05-01"
                     created_at: "2025-05-20T09:00:00Z"
                     updated_at: "2025-05-20T09:00:00Z"
                     site:
                       id: 2
                       name: تدمر
                 links: {}
                 meta: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    post:
      summary: Create a new site experience for the authenticated user
      tags: [ Site Experiences ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StoreSiteExperienceRequest'
      responses:
        '201':
          description: Site experience created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteExperience'
              example:
                 id: 3
                 user_id: 2
                 site_id: 3
                 title: طبيعة ساحرة في الزاوي
                 content: الشلالات جميلة جداً والهواء منعش.
                 photo_url: /storage/experiences/user2_exp3_photo.jpg
                 visit_date: "2025-08-05"
                 created_at: "2025-05-29T12:00:00Z"
                 updated_at: "2025-05-29T12:00:00Z"
                 site:
                       id: 3
                       name: شلالات الزاوي
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /my-experiences/{siteExperience}:
    get:
      summary: Get details of a specific site experience for the authenticated user
      tags: [ Site Experiences ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: siteExperience
          in: path
          required: true
          schema: { type: integer }
          description: ID of the site experience to retrieve.
          example: 1
      responses:
        '200':
          description: Site experience details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteExperience'
              example:
                 id: 1
                 user_id: 2
                 site_id: 1
                 title: تجربتي الرائعة في قلعة حلب
                 content: زيارة ممتعة جداً...
                 photo_url: /storage/experiences/exp_aleppo.jpg
                 visit_date: "2025-04-15"
                 created_at: "2025-05-18T19:00:00Z"
                 updated_at: "2025-05-18T19:00:00Z"
                 site:
                   id: 1
                   name: قلعة حلب
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Experience does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Experience not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

    put:
      summary: Update a specific site experience for the authenticated user
      tags: [ Site Experiences ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: siteExperience
          in: path
          required: true
          schema: { type: integer }
          description: ID of the site experience to update.
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteExperienceRequest'
      responses:
        '200':
          description: Site experience updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteExperience'
              example:
                 id: 1
                 user_id: 2
                 site_id: 1
                 title: تجربتي المحدثة في القلعة
                 content: بعد زيارة ثانية، تأكدت أن المكان رائع!
                 photo_url: /storage/experiences/exp_aleppo.jpg
                 visit_date: "2025-08-10"
                 created_at: "2025-05-18T19:00:00Z"
                 updated_at: "2025-05-29T12:05:00Z"
                 site:
                   id: 1
                   name: قلعة حلب
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Experience does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Experience not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Delete a specific site experience for the authenticated user
      tags: [ Site Experiences ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: siteExperience
          in: path
          required: true
          schema: { type: integer }
          description: ID of the site experience to delete.
          example: 1
      responses:
        '204':
          description: Site experience deleted successfully (No Content)
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (Experience does not belong to user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Experience not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /favorites/toggle:
    post:
      summary: Add or remove an item from the authenticated user's favorites
      tags: [ Favorites ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleFavoriteRequest'
      responses:
        '200':
          description: Favorite status toggled successfully (item added or removed)
          content:
            application/json:
              schema:
                type: object
                properties:
                    message: { type: string, example: Item added to favorites }
                    is_favorited: { type: boolean, description: Current favorite status after toggle, example: true }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error (e.g., invalid target_type, target_id not found for type)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /my-favorites:
    get:
      summary: Get all items favorited by the authenticated user (polymorphic list)
      tags: [ Favorites ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of favorited items (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                            $ref: '#/components/schemas/Favorite'
              example:
                 data:
                   - id: 1
                     user_id: 2
                     target_type: TouristSite
                     target_id: 1
                     added_at: "2025-05-18T19:10:00Z"
                     target:
                         id: 1
                         name: قلعة حلب
                         description: قلعة أثرية تاريخية...
                         main_image_url: /images/aleppo_castle.jpg
                   - id: 2
                     user_id: 2
                     target_type: Product
                     target_id: 1
                     added_at: "2025-05-20T10:00:00Z"
                     target:
                         id: 1
                         name: وشاح حرير يدوي
                         description: وشاح مصنوع يدوياً...
                         main_image_url: /images/scarf.jpg
                         price: 5000.00
                 links: {}
                 meta: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /{targetType}/{targetId}/is-favorited:
    get:
      summary: Check if the authenticated user has favorited a specific item
      tags: [ Favorites ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: targetType
          in: path
          required: true
          schema: { type: string, enum: [ TouristSite, Product, Article, Hotel, SiteExperience ] }
          description: Type of the target item.
          example: TouristSite
        - name: targetId
          in: path
          required: true
          schema: { type: integer }
          description: ID of the target item.
          example: 1
      responses:
        '200':
          description: Favorite status
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_favorited: { type: boolean, example: true }
                  favorite_id: { type: integer, nullable: true, description: ID of the favorite entry if favorited, example: 1 }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Target item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  # --- Public Paths (Browse Data - Continued from previous section) ---

  /tourist-activities:
    get:
      summary: List all tourist activities
      tags:
        - Tourist Activities
      parameters:
        # Add pagination, filtering (e.g., by site_id, city, date range)
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination.
          example: 1
        - name: site_id
          in: query
          schema:
            type: integer
            nullable: true
          description: Filter activities by a specific tourist site ID.
          example: 1
        - name: date_from
          in: query
          schema:
            type: string
            format: date
            nullable: true
          description: Filter activities starting on or after this date.
          example: 2025-06-01
      responses:
        '200':
          description: List of tourist activities (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/TouristActivity'
              example: # Example of paginated activities
                 data:
                   - id: 1
                     name: جولة في قلعة حلب
                     description: جولة سياحية برفقة مرشد...
                     site_id: 1
                     location_text: مدخل قلعة حلب
                     start_datetime: "2025-06-01T10:00:00Z"
                     duration_minutes: 120
                     organizer_user_id: 3
                     price: 50.00
                     max_participants: 20
                     created_at: "2025-05-18T18:40:00Z"
                     updated_at: "2025-05-18T18:40:00Z"
                     site: # Example included site relation (abbreviated)
                         id: 1
                         name: قلعة حلب
                     organizer: # Example included organizer relation (abbreviated)
                         id: 3
                         username: vendor1
                         user_type: Vendor
                   - id: 2
                     name: ورشة عمل فخار
                     description: ورشة لتعلم أساسيات صناعة الفخار.
                     site_id: null # Activity not tied to a specific site
                     location_text: دمشق، منطقة الصناعات اليدوية
                     start_datetime: "2025-06-05T14:00:00Z"
                     duration_minutes: 90
                     organizer_user_id: 3
                     price: 150.00
                     max_participants: 10
                     created_at: "2025-05-18T18:40:00Z"
                     updated_at: "2025-05-18T18:40:00Z"
                     site: null # Null site
                     organizer:
                         id: 3
                         username: vendor1
                         user_type: Vendor
                 links:
                   first: "http://127.0.0.1:8000/api/tourist-activities?page=1"
                   last: "http://127.0.0.1:8000/api/tourist-activities?page=1"
                   prev: null
                   next: null
                 meta:
                   current_page: 1
                   from: 1
                   last_page: 1
                   links:
                     - url: "http://127.0.0.1:8000/api/tourist-activities?page=1"
                       label: "« Previous"
                       active: false
                     - url: "http://127.0.0.1:8000/api/tourist-activities?page=1"
                       label: "1"
                       active: true
                     - url: "http://127.0.0.1:8000/api/tourist-activities?page=1"
                       label: "Next »"
                       active: false
                   path: "http://127.0.0.1:8000/api/tourist-activities"
                   per_page: 15
                   to: 2
                   total: 2 # Example total


  /tourist-activities/{touristActivity}:
    get:
      summary: Get details for a specific tourist activity
      tags:
        - Tourist Activities
      parameters:
        - name: touristActivity
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tourist activity to retrieve.
          example: 1
      responses:
        '200':
          description: Tourist activity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TouristActivity'
              example:
                 id: 1
                 name: جولة في قلعة حلب
                 description: جولة سياحية برفقة مرشد...
                 site_id: 1
                 location_text: مدخل قلعة حلب
                 start_datetime: "2025-06-01T10:00:00Z"
                 duration_minutes: 120
                 organizer_user_id: 3
                 price: 50.00
                 max_participants: 20
                 created_at: "2025-05-18T18:40:00Z"
                 updated_at: "2025-05-18T18:40:00Z"
                 site: # Example included site relation
                     id: 1
                     name: قلعة حلب
                     description: قلعة أثرية تاريخية...
                     location_text: حلب، سوريا
                     latitude: 36.2007
                     longitude: 36.1629
                     city: حلب
                     country: Syria
                     category_id: 1
                     main_image_url: /images/aleppo_castle.jpg
                     video_url: null
                     added_by_user_id: 1
                     created_at: "2025-05-18T18:35:00Z"
                     updated_at: "2025-05-18T18:35:00Z"
                 organizer: # Example included organizer relation
                     id: 3
                     username: vendor1
                     email: vendor1@app.com
                     user_type: Vendor
                     is_active: true
                     created_at: "2025-05-18T18:18:03Z"
                     updated_at: "2025-05-18T18:18:03Z"
                     profile:
                         first_name: رنا
                         last_name: ديب
                         father_name: null
                         mother_name: null
                         passport_image_url: null
                         bio: حرفية في التطريز اليدوي.
                         profile_picture_url: null
                         updated_at: "2025-05-18T18:26:00Z"
        '404':
          description: Activity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /hotels:
    get:
      summary: List all hotels
      tags: [ Hotels ]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination.
          example: 1
        - name: city
          in: query
          schema:
            type: string
          description: Filter hotels by city.
          example: دمشق
        # Add other filter/sort parameters
      responses:
        '200':
          description: List of hotels (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Hotel'
              example:
                data:
                   - id: 1
                     name: فندق الشيراتون دمشق
                     star_rating: 5
                     description: فندق فاخر يقع في قلب دمشق.
                     address_line1: طريق المطار
                     city: دمشق
                     country: Syria
                     latitude: 33.5128
                     longitude: 36.2919
                     contact_phone: "+963 11 2222222"
                     contact_email: info@sheratondamascus.com
                     main_image_url: /images/sheraton_damascus.jpg
                     managed_by_user_id: 4
                     created_at: "2025-05-18T18:45:00Z"
                     updated_at: "2025-05-18T18:45:00Z"
                     managed_by: # Example included manager
                         id: 4
                         username: hotelmanager1
                         user_type: HotelBookingManager
                         # ... abbreviated user details
                     rooms: # Example included rooms
                        type: array
                        items:
                           $ref: '#/components/schemas/HotelRoom'
                        example:
                          - id: 1
                            hotel_id: 1
                            room_type_id: 1
                            room_number: "101"
                            price_per_night: 50000.00
                            area_sqm: 25.50
                            max_occupancy: 1
                            description: غرفة مفردة بإطلالة على المدينة.
                            is_available_for_booking: true
                            created_at: "2025-05-18T18:50:00Z"
                            updated_at: "2025-05-18T18:50:00Z"
                            type: # Included room type
                               id: 1
                               name: Single Room
                               description: غرفة لشخص واحد...
                          - id: 2
                            hotel_id: 1
                            room_type_id: 2
                            room_number: "205"
                            price_per_night: 80000.00
                            area_sqm: 40.00
                            max_occupancy: 2
                            description: غرفة مزدوجة واسعة.
                            is_available_for_booking: true
                            created_at: "2025-05-18T18:51:00Z"
                            updated_at: "2025-05-18T18:51:00Z"
                            type:
                               id: 2
                               name: Double Room
                               description: غرفة لشخصين...
                     links:
                       first: "http://127.0.0.1:8000/api/hotels?page=1"
                       last: "http://127.0.0.1:8000/api/hotels?page=1"
                       prev: null
                       next: null
                     meta:
                       current_page: 1
                       from: 1
                       last_page: 1
                       links:
                         - url: "http://127.0.0.1:8000/api/hotels?page=1"
                           label: "« Previous"
                           active: false
                         - url: "http://127.0.0.1:8000/api/hotels?page=1"
                           label: "1"
                           active: true
                         - url: "http://127.0.0.1:8000/api/hotels?page=1"
                           label: "Next »"
                           active: false
                       path: "http://127.0.0.1:8000/api/hotels"
                       per_page: 15
                       to: 1
                       total: 1 # Example total


  /hotels/{hotel}:
    get:
      summary: Get details for a specific hotel
      tags: [ Hotels ]
      parameters:
        - name: hotel
          in: path
          required: true
          schema:
            type: integer
          description: ID of the hotel to retrieve.
          example: 1
      responses:
        '200':
          description: Hotel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
              example:
                 id: 1
                 name: فندق الشيراتون دمشق
                 star_rating: 5
                 description: فندق فاخر يقع في قلب دمشق.
                 address_line1: طريق المطار
                 city: دمشق
                 country: Syria
                 latitude: 33.5128
                 longitude: 36.2919
                 contact_phone: "+963 11 2222222"
                 contact_email: info@sheratondamascus.com
                 main_image_url: /images/sheraton_damascus.jpg
                 managed_by_user_id: 4
                 created_at: "2025-05-18T18:45:00Z"
                 updated_at: "2025-05-18T18:45:00Z"
                 managed_by: # Example included manager
                     id: 4
                     username: hotelmanager1
                     email: hotelmanager1@app.com
                     user_type: HotelBookingManager
                     is_active: true
                     created_at: "2025-05-18T18:18:03Z"
                     updated_at: "2025-05-18T18:18:03Z"
                     profile:
                         first_name: مدير
                         last_name: الفندق
                         father_name: null
                         mother_name: null
                         passport_image_url: null
                         bio: مدير حجوزات الفندق.
                         profile_picture_url: null
                         updated_at: "2025-05-18T18:27:00Z"
                 rooms: # Example included rooms
                    type: array
                    items:
                       $ref: '#/components/schemas/HotelRoom'
                    example:
                      - id: 1
                        hotel_id: 1
                        room_type_id: 1
                        room_number: "101"
                        price_per_night: 50000.00
                        area_sqm: 25.50
                        max_occupancy: 1
                        description: غرفة مفردة بإطلالة على المدينة.
                        is_available_for_booking: true
                        created_at: "2025-05-18T18:50:00Z"
                        updated_at: "2025-05-18T18:50:00Z"
                        type:
                           id: 1
                           name: Single Room
                           description: غرفة لشخص واحد...
                      - id: 2
                        hotel_id: 1
                        room_type_id: 2
                        room_number: "205"
                        price_per_night: 80000.00
                        area_sqm: 40.00
                        max_occupancy: 2
                        description: غرفة مزدوجة واسعة.
                        is_available_for_booking: true
                        created_at: "2025-05-18T18:51:00Z"
                        updated_at: "2025-05-18T18:51:00Z"
                        type:
                           id: 2
                           name: Double Room
                           description: غرفة لشخصين...
                 # ratings/comments/favorites examples if loaded

        '404':
          description: Hotel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /hotels/{hotel}/rooms:
      get:
        summary: Get rooms for a specific hotel
        tags: [ Hotels ]
        parameters:
          - name: hotel
            in: path
            required: true
            schema: { type: integer }
            description: ID of the hotel to retrieve rooms for.
            example: 1
          # Add optional parameters for filtering rooms (e.g., by type, availability)
          # - name: room_type_id
          #   in: query
          #   schema: { type: integer, nullable: true }
          #   description: Filter rooms by room type ID.
          #   example: 1
        responses:
          '200':
            description: List of rooms for the hotel
            content:
              application/json:
                schema:
                   type: array
                   items:
                     $ref: '#/components/schemas/HotelRoom'
                example: # Example of list of rooms
                   - id: 1
                     hotel_id: 1
                     room_type_id: 1
                     room_number: "101"
                     price_per_night: 50000.00
                     area_sqm: 25.50
                     max_occupancy: 1
                     description: غرفة مفردة بإطلالة على المدينة.
                     is_available_for_booking: true
                     created_at: "2025-05-18T18:50:00Z"
                     updated_at: "2025-05-18T18:50:00Z"
                     type: # Included room type
                         id: 1
                         name: Single Room
                         description: غرفة لشخص واحد...
                   - id: 2
                     hotel_id: 1
                     room_type_id: 2
                     room_number: "205"
                     price_per_night: 80000.00
                     area_sqm: 40.00
                     max_occupancy: 2
                     description: غرفة مزدوجة واسعة.
                     is_available_for_booking: true
                     created_at: "2025-05-18T18:51:00Z"
                     updated_at: "2025-05-18T18:51:00Z"
                     type:
                         id: 2
                         name: Double Room
                         description: غرفة لشخصين...
          '404':
            description: Hotel not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'


  /products:
    get:
      summary: List all products (crafts)
      tags: [ Products ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
        - name: category_id # Example filtering parameter
          in: query
          schema: { type: integer, nullable: true }
          description: Filter products by category ID.
          example: 2
        # Add other filter/sort parameters
      responses:
        '200':
          description: List of products (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
              example:
                data:
                  - id: 1
                    seller_user_id: 3
                    name: وشاح حرير يدوي
                    description: وشاح مصنوع يدوياً من الحرير الطبيعي بتطريز دمشقي.
                    color: أحمر
                    stock_quantity: 15
                    price: 5000.00
                    main_image_url: /images/scarf.jpg
                    category_id: 2
                    is_available: true
                    created_at: "2025-05-18T18:30:00Z"
                    updated_at: "2025-05-18T18:30:00Z"
                    category: # Example included category
                       id: 2
                       name: Embroidery
                       description: null
                    seller: # Example included seller user (abbreviated)
                        id: 3
                        username: vendor1
                        user_type: Vendor
                  - id: 2
                    seller_user_id: 3
                    name: صحن فخاري مزجج
                    description: صحن فخاري تقليدي مزجج بألوان زاهية.
                    color: null
                    stock_quantity: 8
                    price: 1200.00
                    main_image_url: /images/pottery_plate.jpg
                    category_id: 3
                    is_available: true
                    created_at: "2025-05-18T18:31:00Z"
                    updated_at: "2025-05-18T18:31:00Z"
                    category:
                       id: 3
                       name: Ceramic Art
                       description: null
                    seller:
                        id: 3
                        username: vendor1
                        user_type: Vendor
                links:
                  first: "http://127.0.0.1:8000/api/products?page=1"
                  last: "http://127.0.0.1:8000/api/products?page=1"
                  prev: null
                  next: null
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: "http://127.0.0.1:8000/api/products?page=1"
                      label: "« Previous"
                      active: false
                    - url: "http://127.0.0.1:8000/api/products?page=1"
                      label: "1"
                      active: true
                    - url: "http://127.0.0.1:8000/api/products?page=1"
                      label: "Next »"
                      active: false
                  path: "http://127.0.0.1:8000/api/products"
                  per_page: 15
                  to: 2
                  total: 2


  /products/{product}:
    get:
      summary: Get details for a specific product
      tags: [ Products ]
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to retrieve.
          example: 1
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                 id: 1
                 seller_user_id: 3
                 name: وشاح حرير يدوي
                 description: وشاح مصنوع يدوياً من الحرير الطبيعي بتطريز دمشقي.
                 color: أحمر
                 stock_quantity: 15
                 price: 5000.00
                 main_image_url: /images/scarf.jpg
                 category_id: 2
                 is_available: true
                 created_at: "2025-05-18T18:30:00Z"
                 updated_at: "2025-05-18T18:30:00Z"
                 category:
                    id: 2
                    name: Embroidery
                    description: null
                 seller:
                     id: 3
                     username: vendor1
                     email: vendor1@app.com
                     user_type: Vendor
                     is_active: true
                     created_at: "2025-05-18T18:18:03Z"
                     updated_at: "2025-05-18T18:18:03Z"
                     profile:
                         first_name: رنا
                         last_name: ديب
                         father_name: null
                         mother_name: null
                         passport_image_url: null
                         bio: حرفية في التطريز اليدوي.
                         profile_picture_url: null
                         updated_at: "2025-05-18T18:26:00Z"
                 # ratings/comments/favorites examples if loaded (nested)
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /product-categories:
    get:
      summary: List all product categories
      tags:
        - Products
        - Categories
      responses:
        '200':
          description: List of product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
              example:
                - id: 1
                  name: Textiles
                  description: null
                  parent_category_id: null
                - id: 2
                  name: Pottery
                  description: null
                  parent_category_id: null
                - id: 3
                  name: Jewelry
                  description: null
                  parent_category_id: null
                - id: 4
                  name: Woodwork
                  description: null
                  parent_category_id: null
                - id: 5
                  name: Embroidery
                  description: null
                  parent_category_id: 1
                - id: 6
                  name: Carpets
                  description: null
                  parent_category_id: 1

  /articles:
    get:
      summary: List all published articles (blog posts)
      tags: [ Articles ]
      parameters:
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
        # Add other filter/sort parameters
      responses:
        '200':
          description: List of articles (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Article'
              example:
                data:
                  - id: 1
                    author_user_id: 1
                    title: أجمل الأماكن في سوريا
                    content: سوريا غنية بالمواقع السياحية الرائعة...
                    excerpt: سوريا غنية بالمواقع السياحية الرائعة...
                    main_image_url: /images/syria_beauty.jpg
                    video_url: null
                    tags: سياحة,طبيعة,تاريخ
                    status: Published
                    published_at: "2025-05-10T09:00:00Z"
                    created_at: "2025-05-08T14:00:00Z"
                    updated_at: "2025-05-10T09:00:00Z"
                    author: # Example included author (abbreviated)
                       id: 1
                       username: admin
                       user_type: Admin
                links:
                   first: "http://127.0.0.1:8000/api/articles?page=1"
                   last: "http://127.0.0.1:8000/api/articles?page=1"
                   prev: null
                   next: null
                meta:
                   current_page: 1
                   from: 1
                   last_page: 1
                   links:
                     - url: "http://127.0.0.1:8000/api/articles?page=1"
                       label: "« Previous"
                       active: false
                     - url: "http://127.0.0.1:8000/api/articles?page=1"
                       label: "1"
                       active: true
                     - url: "http://127.0.0.1:8000/api/articles?page=1"
                       label: "Next »"
                       active: false
                   path: "http://127.0.0.1:8000/api/articles"
                   per_page: 15
                   to: 1
                   total: 1


  /articles/{article}:
    get:
      summary: Get details for a specific article
      tags: [ Articles ]
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
          description: ID of the article to retrieve.
          example: 1
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
              example:
                 id: 1
                 author_user_id: 1
                 title: أجمل الأماكن في سوريا
                 content: سوريا غنية بالمواقع السياحية الرائعة...
                 excerpt: سوريا غنية بالمواقع السياحية الرائعة...
                 main_image_url: /images/syria_beauty.jpg
                 video_url: null
                 tags: سياحة,طبيعة,تاريخ
                 status: Published
                 published_at: "2025-05-10T09:00:00Z"
                 created_at: "2025-05-08T14:00:00Z"
                 updated_at: "2025-05-10T09:00:00Z"
                 author:
                    id: 1
                    username: admin
                    email: admin@app.com
                    user_type: Admin
                    is_active: true
                    created_at: "2025-05-18T18:18:03Z"
                    updated_at: "2025-05-18T18:18:03Z"
                    profile:
                       first_name: المدير
                       last_name: المسؤول
                       father_name: null
                       mother_name: null
                       passport_image_url: null
                       bio: مدير النظام الرئيسي
                       profile_picture_url: null
                       updated_at: "2025-05-18T18:20:00Z"
                 # comments/ratings/favorites examples if loaded
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /ratings:
    post:
      summary: Create a new rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRatingRequest'
      responses:
        '201':
          description: Rating created successfully
          content:
             application/json:
                schema:
                   $ref: '#/components/schemas/Rating'
                example:
                   id: 5
                   user_id: 2
                   target_type: TouristSite
                   target_id: 1
                   rating_value: 4
                   review_title: مكان جميل
                   review_text: استمتعت كثيراً بزيارة هذا المكان.
                   created_at: "2025-05-18T19:35:00Z"
                   updated_at: "2025-05-18T19:35:00Z"
                   user:
                       id: 2
                       username: tourist1
                       profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                   target:
                       id: 1
                       name: قلعة حلب
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /ratings/{rating}:
    put:
      summary: Update an existing rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: rating
          in: path
          required: true
          schema: { type: integer }
          description: ID of the rating to update.
          example: 5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRatingRequest'
      responses:
        '200':
          description: Rating updated successfully
          content:
             application/json:
                schema:
                   $ref: '#/components/schemas/Rating'
                example:
                   id: 5
                   user_id: 2
                   target_type: TouristSite
                   target_id: 1
                   rating_value: 5
                   review_title: تجربة فاقت التوقعات
                   review_text: لقد كانت الزيارة رائعة جداً!
                   created_at: "2025-05-18T19:35:00Z"
                   updated_at: "2025-05-18T19:38:00Z"
                   user:
                       id: 2
                       username: tourist1
                       profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                   target:
                       id: 1
                       name: قلعة حلب
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (User does not own this rating)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rating not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Delete an existing rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: rating
          in: path
          required: true
          schema: { type: integer }
          description: ID of the rating to delete.
          example: 5
      responses:
        '204':
          description: Rating deleted successfully (No Content)
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (User does not own this rating)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rating not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /{targetType}/{targetId}/ratings:
    get:
      summary: Get ratings for a specific item (Tourist Site, Product, etc.)
      tags: [ Ratings ]
      parameters:
        - name: targetType
          in: path
          required: true
          schema: { type: string, enum: [ TouristSite, Product, Hotel, Article, SiteExperience ] }
          description: Type of the target item.
          example: TouristSite
        - name: targetId
          in: path
          required: true
          schema: { type: integer }
          description: ID of the target item.
          example: 1
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of ratings for the item (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/Rating'
              example:
                 data:
                   - id: 1
                     user_id: 2
                     target_type: TouristSite
                     target_id: 1
                     rating_value: 5
                     review_title: زيارة رائعة
                     review_text: المكان جميل جداً.
                     created_at: "2025-05-20T10:00:00Z"
                     updated_at: "2025-05-20T10:00:00Z"
                     user:
                         id: 2
                         username: tourist1
                         profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                   - id: 2
                     user_id: 1
                     target_type: TouristSite
                     target_id: 1
                     rating_value: 4
                     review_title: مكان يستحق الزيارة
                     review_text: قلعة تاريخية عظيمة، تحتاج بعض الترميم.
                     created_at: "2025-05-21T11:00:00Z"
                     updated_at: "2025-05-21T11:00:00Z"
                     user:
                         id: 1
                         username: admin
                         profile: { first_name: المدير, last_name: المسؤول, bio: مدير النظام الرئيسي, profile_picture_url: null, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:20:00Z" }
                 links: {}
                 meta: {}

        '404':
          description: Target item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /comments:
    post:
      summary: Create a new comment
      tags: [ Comments ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCommentRequest'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: 10
                user_id: 2
                target_type: TouristSite
                target_id: 1
                parent_comment_id: null
                content: تعليق رائع جداً على القلعة!
                created_at: "2025-05-21T11:00:00Z"
                updated_at: "2025-05-21T11:00:00Z"
                user:
                    id: 2
                    username: tourist1
                    profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                target:
                    id: 1
                    name: قلعة حلب
                parent: null
                replies: []
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'


  /comments/{comment}:
    put:
      summary: Update an existing comment
      tags: [ Comments ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: comment
          in: path
          required: true
          schema: { type: integer }
          description: ID of the comment to update.
          example: 10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
      responses:
        '200':
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: 10
                user_id: 2
                target_type: TouristSite
                target_id: 1
                parent_comment_id: null
                content: تعليقي المعدل على التجربة.
                created_at: "2025-05-21T11:00:00Z"
                updated_at: "2025-05-29T12:10:00Z"
                user:
                    id: 2
                    username: tourist1
                    profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                target:
                    id: 1
                    name: قلعة حلب
                parent: null
                replies: []
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (User does not own this comment)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Delete an existing comment
      tags: [ Comments ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: comment
          in: path
          required: true
          schema: { type: integer }
          description: ID of the comment to delete.
          example: 10
      responses:
        '204':
          description: Comment deleted successfully (No Content)
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden (User does not own this comment)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /{targetType}/{targetId}/comments:
    get:
      summary: Get comments for a specific item (Article, Product, etc.)
      tags: [ Comments ]
      parameters:
        - name: targetType
          in: path
          required: true
          schema: { type: string, enum: [ Article, Product, TouristSite, Hotel, SiteExperience ] }
          description: Type of the target item.
          example: TouristSite
        - name: targetId
          in: path
          required: true
          schema: { type: integer }
          description: ID of the target item.
          example: 1
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of comments for the item (paginated, can be threaded)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/Comment'
              example:
                 data:
                   - id: 10
                     user_id: 2
                     target_type: TouristSite
                     target_id: 1
                     parent_comment_id: null
                     content: تعليق رائع جداً على القلعة!
                     created_at: "2025-05-21T11:00:00Z"
                     updated_at: "2025-05-21T11:00:00Z"
                     user:
                         id: 2
                         username: tourist1
                         profile: { first_name: سارة, last_name: محمود, bio: أحب استكشاف المواقع التاريخية., profile_picture_url: /storage/profiles/sara.jpg, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:25:00Z" }
                     target:
                         id: 1
                         name: قلعة حلب
                     parent: null
                     replies:
                       type: array
                       items:
                           $ref: '#/components/schemas/Comment'
                       example:
                           - id: 11
                             user_id: 1
                             target_type: TouristSite
                             target_id: 1
                             parent_comment_id: 10
                             content: شكراً لتعليقك! يسعدنا أنك استمتعت.
                             created_at: "2025-05-21T11:05:00Z"
                             updated_at: "2025-05-21T11:05:00Z"
                             user:
                                 id: 1
                                 username: admin
                                 profile: { first_name: المدير, last_name: المسؤول, bio: مدير النظام الرئيسي, profile_picture_url: null, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:20:00Z" }
                             target:
                                 id: 1
                                 name: قلعة حلب
                             parent: # Included parent comment details
                                 id: 10
                                 user_id: 2
                                 target_type: TouristSite
                                 target_id: 1
                                 parent_comment_id: null
                                 content: تعليق رائع جداً على القلعة!
                                 created_at: "2025-05-21T11:00:00Z"
                                 updated_at: "2025-05-21T11:00:00Z"
                                 # No nested relationships in parent to avoid infinite recursion
                             replies: []
                   - id: 12
                     user_id: 1
                     target_type: TouristSite
                     target_id: 1
                     parent_comment_id: null
                     content: تعليق ممتاز!
                     created_at: "2025-05-21T12:00:00Z"
                     updated_at: "2025-05-21T12:00:00Z"
                     user:
                         id: 1
                         username: admin
                         profile: { first_name: المدير, last_name: المسؤول, bio: مدير النظام الرئيسي, profile_picture_url: null, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:20:00Z" }
                     target:
                         id: 1
                         name: قلعة حلب
                     parent: null
                     replies: []
                 links: {}
                 meta: {}
        '404':
          description: Target item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  /comments/{comment}/replies:
    get:
      summary: Get replies for a specific comment
      tags: [ Comments ]
      parameters:
        - name: comment
          in: path
          required: true
          schema: { type: integer }
          description: ID of the parent comment.
          example: 10
        - name: page
          in: query
          schema: { type: integer, minimum: 1 }
          example: 1
      responses:
        '200':
          description: List of replies for the comment (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/Comment'
              example:
                 data:
                     - id: 11
                       user_id: 1
                       target_type: TouristSite
                       target_id: 1
                       parent_comment_id: 10
                       content: شكراً لتعليقك! يسعدنا أنك استمتعت.
                       created_at: "2025-05-21T11:05:00Z"
                       updated_at: "2025-05-21T11:05:00Z"
                       user:
                           id: 1
                           username: admin
                           profile: { first_name: المدير, last_name: المسؤول, bio: مدير النظام الرئيسي, profile_picture_url: null, father_name: null, mother_name: null, passport_image_url: null, updated_at: "2025-05-18T18:20:00Z" }
                       target:
                           id: 1
                           name: قلعة حلب
                       parent:
                           id: 10
                           user_id: 2
                           content: تعليق رائع جداً على القلعة!
                           created_at: "2025-05-21T11:00:00Z"
                           updated_at: "2025-05-21T11:00:00Z"
                           # No nested relationships in parent to avoid infinite recursion
                       replies: []
                 links: {}
                 meta: {}
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
